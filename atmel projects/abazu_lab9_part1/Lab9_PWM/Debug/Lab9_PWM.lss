
Lab9_PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000006ac  00000740  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800104  00800104  00000744  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000744  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000774  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  000007b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b28  00000000  00000000  0000081c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008fc  00000000  00000000  00001344  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004d6  00000000  00000000  00001c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e8  00000000  00000000  00002118  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a2  00000000  00000000  00002200  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000259  00000000  00000000  000026a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000028fb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	e3 c0       	rjmp	.+454    	; 0x1fc <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec ea       	ldi	r30, 0xAC	; 172
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 30       	cpi	r26, 0x0D	; 13
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	62 d1       	rcall	.+708    	; 0x388 <main>
  c4:	f1 c2       	rjmp	.+1506   	; 0x6a8 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <set_PWM>:
void TimerOff() {
    TCCR1B = 0x00;
}

void TimerISR() {
    TimerFlag = 1;
  c8:	cf 92       	push	r12
  ca:	df 92       	push	r13
  cc:	ef 92       	push	r14
  ce:	ff 92       	push	r15
  d0:	6b 01       	movw	r12, r22
  d2:	7c 01       	movw	r14, r24
  d4:	9b 01       	movw	r18, r22
  d6:	ac 01       	movw	r20, r24
  d8:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <__data_end>
  dc:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <__data_end+0x1>
  e0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end+0x2>
  e4:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x3>
  e8:	66 d1       	rcall	.+716    	; 0x3b6 <__cmpsf2>
  ea:	88 23       	and	r24, r24
  ec:	09 f4       	brne	.+2      	; 0xf0 <set_PWM+0x28>
  ee:	52 c0       	rjmp	.+164    	; 0x194 <set_PWM+0xcc>
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	a9 01       	movw	r20, r18
  f6:	c7 01       	movw	r24, r14
  f8:	b6 01       	movw	r22, r12
  fa:	5d d1       	rcall	.+698    	; 0x3b6 <__cmpsf2>
  fc:	81 11       	cpse	r24, r1
  fe:	06 c0       	rjmp	.+12     	; 0x10c <set_PWM+0x44>
 100:	e1 e9       	ldi	r30, 0x91	; 145
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	88 70       	andi	r24, 0x08	; 8
 108:	80 83       	st	Z, r24
 10a:	05 c0       	rjmp	.+10     	; 0x116 <set_PWM+0x4e>
 10c:	e1 e9       	ldi	r30, 0x91	; 145
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	83 60       	ori	r24, 0x03	; 3
 114:	80 83       	st	Z, r24
 116:	28 e5       	ldi	r18, 0x58	; 88
 118:	39 e3       	ldi	r19, 0x39	; 57
 11a:	44 e7       	ldi	r20, 0x74	; 116
 11c:	5f e3       	ldi	r21, 0x3F	; 63
 11e:	c7 01       	movw	r24, r14
 120:	b6 01       	movw	r22, r12
 122:	49 d1       	rcall	.+658    	; 0x3b6 <__cmpsf2>
 124:	88 23       	and	r24, r24
 126:	3c f4       	brge	.+14     	; 0x136 <set_PWM+0x6e>
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	9f ef       	ldi	r25, 0xFF	; 255
 12c:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 130:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 134:	23 c0       	rjmp	.+70     	; 0x17c <set_PWM+0xb4>
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	34 e2       	ldi	r19, 0x24	; 36
 13a:	44 ef       	ldi	r20, 0xF4	; 244
 13c:	56 e4       	ldi	r21, 0x46	; 70
 13e:	c7 01       	movw	r24, r14
 140:	b6 01       	movw	r22, r12
 142:	4b d2       	rcall	.+1174   	; 0x5da <__gesf2>
 144:	18 16       	cp	r1, r24
 146:	2c f4       	brge	.+10     	; 0x152 <set_PWM+0x8a>
 148:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 14c:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 150:	15 c0       	rjmp	.+42     	; 0x17c <set_PWM+0xb4>
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	40 e0       	ldi	r20, 0x00	; 0
 158:	53 e4       	ldi	r21, 0x43	; 67
 15a:	c7 01       	movw	r24, r14
 15c:	b6 01       	movw	r22, r12
 15e:	41 d2       	rcall	.+1154   	; 0x5e2 <__mulsf3>
 160:	9b 01       	movw	r18, r22
 162:	ac 01       	movw	r20, r24
 164:	60 e0       	ldi	r22, 0x00	; 0
 166:	74 e2       	ldi	r23, 0x24	; 36
 168:	84 ef       	ldi	r24, 0xF4	; 244
 16a:	9a e4       	ldi	r25, 0x4A	; 74
 16c:	28 d1       	rcall	.+592    	; 0x3be <__divsf3>
 16e:	8f d1       	rcall	.+798    	; 0x48e <__fixsfsi>
 170:	61 50       	subi	r22, 0x01	; 1
 172:	71 09       	sbc	r23, r1
 174:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 178:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 17c:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 180:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 184:	c0 92 04 01 	sts	0x0104, r12	; 0x800104 <__data_end>
 188:	d0 92 05 01 	sts	0x0105, r13	; 0x800105 <__data_end+0x1>
 18c:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <__data_end+0x2>
 190:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <__data_end+0x3>
 194:	ff 90       	pop	r15
 196:	ef 90       	pop	r14
 198:	df 90       	pop	r13
 19a:	cf 90       	pop	r12
 19c:	08 95       	ret

0000019e <PWM_on>:
 19e:	80 e4       	ldi	r24, 0x40	; 64
 1a0:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 1a4:	8b e0       	ldi	r24, 0x0B	; 11
 1a6:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
 1aa:	60 e0       	ldi	r22, 0x00	; 0
 1ac:	70 e0       	ldi	r23, 0x00	; 0
 1ae:	cb 01       	movw	r24, r22
 1b0:	8b cf       	rjmp	.-234    	; 0xc8 <set_PWM>
 1b2:	08 95       	ret

000001b4 <TimerOn>:
 1b4:	8b e0       	ldi	r24, 0x0B	; 11
 1b6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 1ba:	8d e7       	ldi	r24, 0x7D	; 125
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1c2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1c6:	82 e0       	ldi	r24, 0x02	; 2
 1c8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 1cc:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1d0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 1d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1d8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1dc:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1e0:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 1e4:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_avr_timer_cntcurr>
 1e8:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_avr_timer_cntcurr+0x1>
 1ec:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <_avr_timer_cntcurr+0x2>
 1f0:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <_avr_timer_cntcurr+0x3>
 1f4:	8f b7       	in	r24, 0x3f	; 63
 1f6:	80 68       	ori	r24, 0x80	; 128
 1f8:	8f bf       	out	0x3f, r24	; 63
 1fa:	08 95       	ret

000001fc <__vector_13>:
}

ISR(TIMER1_COMPA_vect) {
 1fc:	1f 92       	push	r1
 1fe:	0f 92       	push	r0
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	0f 92       	push	r0
 204:	11 24       	eor	r1, r1
 206:	8f 93       	push	r24
 208:	9f 93       	push	r25
 20a:	af 93       	push	r26
 20c:	bf 93       	push	r27
    // CPU automatically calls when TCNT1 == OCR1 (every 1 ms per TimerOn settings)
    _avr_timer_cntcurr--;   // Count down to 0 rather than up to TOP
 20e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_avr_timer_cntcurr>
 212:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_avr_timer_cntcurr+0x1>
 216:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <_avr_timer_cntcurr+0x2>
 21a:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <_avr_timer_cntcurr+0x3>
 21e:	01 97       	sbiw	r24, 0x01	; 1
 220:	a1 09       	sbc	r26, r1
 222:	b1 09       	sbc	r27, r1
 224:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_avr_timer_cntcurr>
 228:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_avr_timer_cntcurr+0x1>
 22c:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <_avr_timer_cntcurr+0x2>
 230:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <_avr_timer_cntcurr+0x3>
    if (_avr_timer_cntcurr == 0) {
 234:	89 2b       	or	r24, r25
 236:	8a 2b       	or	r24, r26
 238:	8b 2b       	or	r24, r27
 23a:	99 f4       	brne	.+38     	; 0x262 <__vector_13+0x66>
void TimerOff() {
    TCCR1B = 0x00;
}

void TimerISR() {
    TimerFlag = 1;
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <TimerFlag>
ISR(TIMER1_COMPA_vect) {
    // CPU automatically calls when TCNT1 == OCR1 (every 1 ms per TimerOn settings)
    _avr_timer_cntcurr--;   // Count down to 0 rather than up to TOP
    if (_avr_timer_cntcurr == 0) {
        TimerISR();
        _avr_timer_cntcurr = _avr_timer_M;
 242:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 246:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 24a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 24e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 252:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_avr_timer_cntcurr>
 256:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_avr_timer_cntcurr+0x1>
 25a:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <_avr_timer_cntcurr+0x2>
 25e:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <_avr_timer_cntcurr+0x3>
    }

}
 262:	bf 91       	pop	r27
 264:	af 91       	pop	r26
 266:	9f 91       	pop	r25
 268:	8f 91       	pop	r24
 26a:	0f 90       	pop	r0
 26c:	0f be       	out	0x3f, r0	; 63
 26e:	0f 90       	pop	r0
 270:	1f 90       	pop	r1
 272:	18 95       	reti

00000274 <TimerSet>:

void TimerSet(unsigned long M) {
    _avr_timer_M = M;
 274:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 278:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 27c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 280:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    _avr_timer_cntcurr = _avr_timer_M;
 284:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <_avr_timer_cntcurr>
 288:	70 93 09 01 	sts	0x0109, r23	; 0x800109 <_avr_timer_cntcurr+0x1>
 28c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_avr_timer_cntcurr+0x2>
 290:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <_avr_timer_cntcurr+0x3>
 294:	08 95       	ret

00000296 <Tick>:
}

int Tick(int state) {
 296:	ac 01       	movw	r20, r24
    unsigned char A0 = ~PINA & 0x01;
 298:	80 b1       	in	r24, 0x00	; 0
 29a:	81 70       	andi	r24, 0x01	; 1
    unsigned char A1 = ~PINA & 0x02;
 29c:	90 b1       	in	r25, 0x00	; 0
 29e:	90 95       	com	r25
 2a0:	92 70       	andi	r25, 0x02	; 2
    unsigned char A2 = ~PINA & 0x04;
 2a2:	20 b1       	in	r18, 0x00	; 0
 2a4:	20 95       	com	r18
 2a6:	24 70       	andi	r18, 0x04	; 4

    switch (state) {
 2a8:	42 30       	cpi	r20, 0x02	; 2
 2aa:	51 05       	cpc	r21, r1
 2ac:	09 f1       	breq	.+66     	; 0x2f0 <Tick+0x5a>
 2ae:	44 f4       	brge	.+16     	; 0x2c0 <Tick+0x2a>
 2b0:	41 15       	cp	r20, r1
 2b2:	51 05       	cpc	r21, r1
 2b4:	09 f4       	brne	.+2      	; 0x2b8 <Tick+0x22>
 2b6:	49 c0       	rjmp	.+146    	; 0x34a <Tick+0xb4>
 2b8:	41 30       	cpi	r20, 0x01	; 1
 2ba:	51 05       	cpc	r21, r1
 2bc:	41 f0       	breq	.+16     	; 0x2ce <Tick+0x38>
 2be:	3e c0       	rjmp	.+124    	; 0x33c <Tick+0xa6>
 2c0:	43 30       	cpi	r20, 0x03	; 3
 2c2:	51 05       	cpc	r21, r1
 2c4:	f9 f0       	breq	.+62     	; 0x304 <Tick+0x6e>
 2c6:	44 30       	cpi	r20, 0x04	; 4
 2c8:	51 05       	cpc	r21, r1
 2ca:	49 f1       	breq	.+82     	; 0x31e <Tick+0x88>
 2cc:	37 c0       	rjmp	.+110    	; 0x33c <Tick+0xa6>
        case init:
            state = wait;
            break;

        case wait:
            if (A0 && !A1 && !A2) { state = C_4; }
 2ce:	81 11       	cpse	r24, r1
 2d0:	06 c0       	rjmp	.+12     	; 0x2de <Tick+0x48>
 2d2:	91 11       	cpse	r25, r1
 2d4:	3a c0       	rjmp	.+116    	; 0x34a <Tick+0xb4>
 2d6:	22 23       	and	r18, r18
 2d8:	09 f4       	brne	.+2      	; 0x2dc <Tick+0x46>
 2da:	3e c0       	rjmp	.+124    	; 0x358 <Tick+0xc2>
 2dc:	36 c0       	rjmp	.+108    	; 0x34a <Tick+0xb4>
            else if (!A0 && A1 && !A2) { state = D_4; }
 2de:	99 23       	and	r25, r25
 2e0:	21 f0       	breq	.+8      	; 0x2ea <Tick+0x54>
 2e2:	22 23       	and	r18, r18
 2e4:	09 f4       	brne	.+2      	; 0x2e8 <Tick+0x52>
 2e6:	40 c0       	rjmp	.+128    	; 0x368 <Tick+0xd2>
 2e8:	30 c0       	rjmp	.+96     	; 0x34a <Tick+0xb4>
            else if (!A0 && !A1 && A2) { state = E_4; }
 2ea:	21 11       	cpse	r18, r1
 2ec:	45 c0       	rjmp	.+138    	; 0x378 <Tick+0xe2>
 2ee:	2d c0       	rjmp	.+90     	; 0x34a <Tick+0xb4>
            else { state = wait; }
            break;

        case C_4:
            if (A0 && !A1 && !A2) { state = C_4; }
 2f0:	88 23       	and	r24, r24
 2f2:	91 f1       	breq	.+100    	; 0x358 <Tick+0xc2>
            else if (!A0 && A1 && !A2) { state = D_4; }
 2f4:	99 23       	and	r25, r25
 2f6:	19 f0       	breq	.+6      	; 0x2fe <Tick+0x68>
 2f8:	22 23       	and	r18, r18
 2fa:	b1 f1       	breq	.+108    	; 0x368 <Tick+0xd2>
 2fc:	2d c0       	rjmp	.+90     	; 0x358 <Tick+0xc2>
            else if (!A0 && !A1 && A2) { state = E_4; }
 2fe:	21 11       	cpse	r18, r1
 300:	3b c0       	rjmp	.+118    	; 0x378 <Tick+0xe2>
 302:	23 c0       	rjmp	.+70     	; 0x34a <Tick+0xb4>
            else if (!A0 && !A1 && !A2) { state = wait; }
            break;

        case D_4:
            if (!A0 && A1 && !A2) { state = D_4; }
 304:	88 23       	and	r24, r24
 306:	19 f0       	breq	.+6      	; 0x30e <Tick+0x78>
 308:	91 11       	cpse	r25, r1
 30a:	2e c0       	rjmp	.+92     	; 0x368 <Tick+0xd2>
 30c:	05 c0       	rjmp	.+10     	; 0x318 <Tick+0x82>
            else if (A0 && !A1 && !A2) { state = C_4; }
 30e:	91 11       	cpse	r25, r1
 310:	2b c0       	rjmp	.+86     	; 0x368 <Tick+0xd2>
 312:	22 23       	and	r18, r18
 314:	09 f1       	breq	.+66     	; 0x358 <Tick+0xc2>
 316:	28 c0       	rjmp	.+80     	; 0x368 <Tick+0xd2>
            else if (!A0 && !A1 && A2) { state = E_4; }
 318:	21 11       	cpse	r18, r1
 31a:	2e c0       	rjmp	.+92     	; 0x378 <Tick+0xe2>
 31c:	16 c0       	rjmp	.+44     	; 0x34a <Tick+0xb4>
            else if (!A0 && !A1 && !A2) { state = wait; }
            break;

        case E_4:
            if (!A0 && !A1 && A2) { state = E_4; }
 31e:	88 23       	and	r24, r24
 320:	29 f0       	breq	.+10     	; 0x32c <Tick+0x96>
 322:	91 11       	cpse	r25, r1
 324:	08 c0       	rjmp	.+16     	; 0x336 <Tick+0xa0>
 326:	21 11       	cpse	r18, r1
 328:	27 c0       	rjmp	.+78     	; 0x378 <Tick+0xe2>
 32a:	0f c0       	rjmp	.+30     	; 0x34a <Tick+0xb4>
            else if (A0 && !A1 && !A2) { state = C_4; }
 32c:	91 11       	cpse	r25, r1
 32e:	24 c0       	rjmp	.+72     	; 0x378 <Tick+0xe2>
 330:	22 23       	and	r18, r18
 332:	91 f0       	breq	.+36     	; 0x358 <Tick+0xc2>
 334:	21 c0       	rjmp	.+66     	; 0x378 <Tick+0xe2>
            else if (!A0 && A1 && !A2) { state = D_4; }
 336:	22 23       	and	r18, r18
 338:	b9 f0       	breq	.+46     	; 0x368 <Tick+0xd2>
 33a:	1e c0       	rjmp	.+60     	; 0x378 <Tick+0xe2>
            break;
    }

    switch (state) {
        case init:
            set_PWM(0);
 33c:	60 e0       	ldi	r22, 0x00	; 0
 33e:	70 e0       	ldi	r23, 0x00	; 0
 340:	cb 01       	movw	r24, r22
 342:	c2 de       	rcall	.-636    	; 0xc8 <set_PWM>
            break;
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	08 95       	ret

        case wait:
            set_PWM(0);
 34a:	60 e0       	ldi	r22, 0x00	; 0
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	cb 01       	movw	r24, r22
 350:	bb de       	rcall	.-650    	; 0xc8 <set_PWM>
            break;
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	08 95       	ret

        case C_4:
            set_PWM(261.63);
 358:	64 ea       	ldi	r22, 0xA4	; 164
 35a:	70 ed       	ldi	r23, 0xD0	; 208
 35c:	82 e8       	ldi	r24, 0x82	; 130
 35e:	93 e4       	ldi	r25, 0x43	; 67
 360:	b3 de       	rcall	.-666    	; 0xc8 <set_PWM>
            break;
 362:	82 e0       	ldi	r24, 0x02	; 2
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	08 95       	ret

        case D_4:
            set_PWM(293.66);
 368:	6b e7       	ldi	r22, 0x7B	; 123
 36a:	74 ed       	ldi	r23, 0xD4	; 212
 36c:	82 e9       	ldi	r24, 0x92	; 146
 36e:	93 e4       	ldi	r25, 0x43	; 67
 370:	ab de       	rcall	.-682    	; 0xc8 <set_PWM>
            break;
 372:	83 e0       	ldi	r24, 0x03	; 3
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	08 95       	ret

        case E_4:
            set_PWM(329.63);
 378:	64 ea       	ldi	r22, 0xA4	; 164
 37a:	70 ed       	ldi	r23, 0xD0	; 208
 37c:	84 ea       	ldi	r24, 0xA4	; 164
 37e:	93 e4       	ldi	r25, 0x43	; 67
 380:	a3 de       	rcall	.-698    	; 0xc8 <set_PWM>
            break;
 382:	84 e0       	ldi	r24, 0x04	; 4
 384:	90 e0       	ldi	r25, 0x00	; 0
    }

    return state;
}
 386:	08 95       	ret

00000388 <main>:

int main(void) {
    DDRA = 0x00; PORTA = 0xFF;
 388:	11 b8       	out	0x01, r1	; 1
 38a:	8f ef       	ldi	r24, 0xFF	; 255
 38c:	82 b9       	out	0x02, r24	; 2
    DDRB = 0x40; PORTB = 0x00;
 38e:	80 e4       	ldi	r24, 0x40	; 64
 390:	84 b9       	out	0x04, r24	; 4
 392:	15 b8       	out	0x05, r1	; 5

	TimerOn();
 394:	0f df       	rcall	.-482    	; 0x1b4 <TimerOn>
	TimerSet(250);
 396:	6a ef       	ldi	r22, 0xFA	; 250
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	90 e0       	ldi	r25, 0x00	; 0

    PWM_on();
 39e:	6a df       	rcall	.-300    	; 0x274 <TimerSet>

    States state = init;
 3a0:	fe de       	rcall	.-516    	; 0x19e <PWM_on>

    /* Insert your solution below */
    while (1) {
        state = Tick(state);
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	77 df       	rcall	.-274    	; 0x296 <Tick>

        while(!TimerFlag) {}
 3a8:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <TimerFlag>
 3ac:	99 23       	and	r25, r25
 3ae:	e1 f3       	breq	.-8      	; 0x3a8 <main+0x20>
        TimerFlag = 0;
 3b0:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <TimerFlag>
    }
 3b4:	f7 cf       	rjmp	.-18     	; 0x3a4 <main+0x1c>

000003b6 <__cmpsf2>:
 3b6:	9c d0       	rcall	.+312    	; 0x4f0 <__fp_cmp>
 3b8:	08 f4       	brcc	.+2      	; 0x3bc <__cmpsf2+0x6>
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	08 95       	ret

000003be <__divsf3>:
 3be:	0c d0       	rcall	.+24     	; 0x3d8 <__divsf3x>
 3c0:	d2 c0       	rjmp	.+420    	; 0x566 <__fp_round>
 3c2:	ca d0       	rcall	.+404    	; 0x558 <__fp_pscB>
 3c4:	40 f0       	brcs	.+16     	; 0x3d6 <__divsf3+0x18>
 3c6:	c1 d0       	rcall	.+386    	; 0x54a <__fp_pscA>
 3c8:	30 f0       	brcs	.+12     	; 0x3d6 <__divsf3+0x18>
 3ca:	21 f4       	brne	.+8      	; 0x3d4 <__divsf3+0x16>
 3cc:	5f 3f       	cpi	r21, 0xFF	; 255
 3ce:	19 f0       	breq	.+6      	; 0x3d6 <__divsf3+0x18>
 3d0:	b3 c0       	rjmp	.+358    	; 0x538 <__fp_inf>
 3d2:	51 11       	cpse	r21, r1
 3d4:	fc c0       	rjmp	.+504    	; 0x5ce <__fp_szero>
 3d6:	b6 c0       	rjmp	.+364    	; 0x544 <__fp_nan>

000003d8 <__divsf3x>:
 3d8:	d7 d0       	rcall	.+430    	; 0x588 <__fp_split3>
 3da:	98 f3       	brcs	.-26     	; 0x3c2 <__divsf3+0x4>

000003dc <__divsf3_pse>:
 3dc:	99 23       	and	r25, r25
 3de:	c9 f3       	breq	.-14     	; 0x3d2 <__divsf3+0x14>
 3e0:	55 23       	and	r21, r21
 3e2:	b1 f3       	breq	.-20     	; 0x3d0 <__divsf3+0x12>
 3e4:	95 1b       	sub	r25, r21
 3e6:	55 0b       	sbc	r21, r21
 3e8:	bb 27       	eor	r27, r27
 3ea:	aa 27       	eor	r26, r26
 3ec:	62 17       	cp	r22, r18
 3ee:	73 07       	cpc	r23, r19
 3f0:	84 07       	cpc	r24, r20
 3f2:	38 f0       	brcs	.+14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f4:	9f 5f       	subi	r25, 0xFF	; 255
 3f6:	5f 4f       	sbci	r21, 0xFF	; 255
 3f8:	22 0f       	add	r18, r18
 3fa:	33 1f       	adc	r19, r19
 3fc:	44 1f       	adc	r20, r20
 3fe:	aa 1f       	adc	r26, r26
 400:	a9 f3       	breq	.-22     	; 0x3ec <__divsf3_pse+0x10>
 402:	33 d0       	rcall	.+102    	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 404:	0e 2e       	mov	r0, r30
 406:	3a f0       	brmi	.+14     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 408:	e0 e8       	ldi	r30, 0x80	; 128
 40a:	30 d0       	rcall	.+96     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 40c:	91 50       	subi	r25, 0x01	; 1
 40e:	50 40       	sbci	r21, 0x00	; 0
 410:	e6 95       	lsr	r30
 412:	00 1c       	adc	r0, r0
 414:	ca f7       	brpl	.-14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 416:	29 d0       	rcall	.+82     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 418:	fe 2f       	mov	r31, r30
 41a:	27 d0       	rcall	.+78     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 41c:	66 0f       	add	r22, r22
 41e:	77 1f       	adc	r23, r23
 420:	88 1f       	adc	r24, r24
 422:	bb 1f       	adc	r27, r27
 424:	26 17       	cp	r18, r22
 426:	37 07       	cpc	r19, r23
 428:	48 07       	cpc	r20, r24
 42a:	ab 07       	cpc	r26, r27
 42c:	b0 e8       	ldi	r27, 0x80	; 128
 42e:	09 f0       	breq	.+2      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 430:	bb 0b       	sbc	r27, r27
 432:	80 2d       	mov	r24, r0
 434:	bf 01       	movw	r22, r30
 436:	ff 27       	eor	r31, r31
 438:	93 58       	subi	r25, 0x83	; 131
 43a:	5f 4f       	sbci	r21, 0xFF	; 255
 43c:	2a f0       	brmi	.+10     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 43e:	9e 3f       	cpi	r25, 0xFE	; 254
 440:	51 05       	cpc	r21, r1
 442:	68 f0       	brcs	.+26     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 444:	79 c0       	rjmp	.+242    	; 0x538 <__fp_inf>
 446:	c3 c0       	rjmp	.+390    	; 0x5ce <__fp_szero>
 448:	5f 3f       	cpi	r21, 0xFF	; 255
 44a:	ec f3       	brlt	.-6      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 44c:	98 3e       	cpi	r25, 0xE8	; 232
 44e:	dc f3       	brlt	.-10     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 450:	86 95       	lsr	r24
 452:	77 95       	ror	r23
 454:	67 95       	ror	r22
 456:	b7 95       	ror	r27
 458:	f7 95       	ror	r31
 45a:	9f 5f       	subi	r25, 0xFF	; 255
 45c:	c9 f7       	brne	.-14     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 45e:	88 0f       	add	r24, r24
 460:	91 1d       	adc	r25, r1
 462:	96 95       	lsr	r25
 464:	87 95       	ror	r24
 466:	97 f9       	bld	r25, 7
 468:	08 95       	ret
 46a:	e1 e0       	ldi	r30, 0x01	; 1
 46c:	66 0f       	add	r22, r22
 46e:	77 1f       	adc	r23, r23
 470:	88 1f       	adc	r24, r24
 472:	bb 1f       	adc	r27, r27
 474:	62 17       	cp	r22, r18
 476:	73 07       	cpc	r23, r19
 478:	84 07       	cpc	r24, r20
 47a:	ba 07       	cpc	r27, r26
 47c:	20 f0       	brcs	.+8      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 47e:	62 1b       	sub	r22, r18
 480:	73 0b       	sbc	r23, r19
 482:	84 0b       	sbc	r24, r20
 484:	ba 0b       	sbc	r27, r26
 486:	ee 1f       	adc	r30, r30
 488:	88 f7       	brcc	.-30     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 48a:	e0 95       	com	r30
 48c:	08 95       	ret

0000048e <__fixsfsi>:
 48e:	04 d0       	rcall	.+8      	; 0x498 <__fixunssfsi>
 490:	68 94       	set
 492:	b1 11       	cpse	r27, r1
 494:	9c c0       	rjmp	.+312    	; 0x5ce <__fp_szero>
 496:	08 95       	ret

00000498 <__fixunssfsi>:
 498:	7f d0       	rcall	.+254    	; 0x598 <__fp_splitA>
 49a:	88 f0       	brcs	.+34     	; 0x4be <__fixunssfsi+0x26>
 49c:	9f 57       	subi	r25, 0x7F	; 127
 49e:	90 f0       	brcs	.+36     	; 0x4c4 <__fixunssfsi+0x2c>
 4a0:	b9 2f       	mov	r27, r25
 4a2:	99 27       	eor	r25, r25
 4a4:	b7 51       	subi	r27, 0x17	; 23
 4a6:	a0 f0       	brcs	.+40     	; 0x4d0 <__fixunssfsi+0x38>
 4a8:	d1 f0       	breq	.+52     	; 0x4de <__fixunssfsi+0x46>
 4aa:	66 0f       	add	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	88 1f       	adc	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	1a f0       	brmi	.+6      	; 0x4ba <__fixunssfsi+0x22>
 4b4:	ba 95       	dec	r27
 4b6:	c9 f7       	brne	.-14     	; 0x4aa <__fixunssfsi+0x12>
 4b8:	12 c0       	rjmp	.+36     	; 0x4de <__fixunssfsi+0x46>
 4ba:	b1 30       	cpi	r27, 0x01	; 1
 4bc:	81 f0       	breq	.+32     	; 0x4de <__fixunssfsi+0x46>
 4be:	86 d0       	rcall	.+268    	; 0x5cc <__fp_zero>
 4c0:	b1 e0       	ldi	r27, 0x01	; 1
 4c2:	08 95       	ret
 4c4:	83 c0       	rjmp	.+262    	; 0x5cc <__fp_zero>
 4c6:	67 2f       	mov	r22, r23
 4c8:	78 2f       	mov	r23, r24
 4ca:	88 27       	eor	r24, r24
 4cc:	b8 5f       	subi	r27, 0xF8	; 248
 4ce:	39 f0       	breq	.+14     	; 0x4de <__fixunssfsi+0x46>
 4d0:	b9 3f       	cpi	r27, 0xF9	; 249
 4d2:	cc f3       	brlt	.-14     	; 0x4c6 <__fixunssfsi+0x2e>
 4d4:	86 95       	lsr	r24
 4d6:	77 95       	ror	r23
 4d8:	67 95       	ror	r22
 4da:	b3 95       	inc	r27
 4dc:	d9 f7       	brne	.-10     	; 0x4d4 <__fixunssfsi+0x3c>
 4de:	3e f4       	brtc	.+14     	; 0x4ee <__fixunssfsi+0x56>
 4e0:	90 95       	com	r25
 4e2:	80 95       	com	r24
 4e4:	70 95       	com	r23
 4e6:	61 95       	neg	r22
 4e8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ea:	8f 4f       	sbci	r24, 0xFF	; 255
 4ec:	9f 4f       	sbci	r25, 0xFF	; 255
 4ee:	08 95       	ret

000004f0 <__fp_cmp>:
 4f0:	99 0f       	add	r25, r25
 4f2:	00 08       	sbc	r0, r0
 4f4:	55 0f       	add	r21, r21
 4f6:	aa 0b       	sbc	r26, r26
 4f8:	e0 e8       	ldi	r30, 0x80	; 128
 4fa:	fe ef       	ldi	r31, 0xFE	; 254
 4fc:	16 16       	cp	r1, r22
 4fe:	17 06       	cpc	r1, r23
 500:	e8 07       	cpc	r30, r24
 502:	f9 07       	cpc	r31, r25
 504:	c0 f0       	brcs	.+48     	; 0x536 <__fp_cmp+0x46>
 506:	12 16       	cp	r1, r18
 508:	13 06       	cpc	r1, r19
 50a:	e4 07       	cpc	r30, r20
 50c:	f5 07       	cpc	r31, r21
 50e:	98 f0       	brcs	.+38     	; 0x536 <__fp_cmp+0x46>
 510:	62 1b       	sub	r22, r18
 512:	73 0b       	sbc	r23, r19
 514:	84 0b       	sbc	r24, r20
 516:	95 0b       	sbc	r25, r21
 518:	39 f4       	brne	.+14     	; 0x528 <__fp_cmp+0x38>
 51a:	0a 26       	eor	r0, r26
 51c:	61 f0       	breq	.+24     	; 0x536 <__fp_cmp+0x46>
 51e:	23 2b       	or	r18, r19
 520:	24 2b       	or	r18, r20
 522:	25 2b       	or	r18, r21
 524:	21 f4       	brne	.+8      	; 0x52e <__fp_cmp+0x3e>
 526:	08 95       	ret
 528:	0a 26       	eor	r0, r26
 52a:	09 f4       	brne	.+2      	; 0x52e <__fp_cmp+0x3e>
 52c:	a1 40       	sbci	r26, 0x01	; 1
 52e:	a6 95       	lsr	r26
 530:	8f ef       	ldi	r24, 0xFF	; 255
 532:	81 1d       	adc	r24, r1
 534:	81 1d       	adc	r24, r1
 536:	08 95       	ret

00000538 <__fp_inf>:
 538:	97 f9       	bld	r25, 7
 53a:	9f 67       	ori	r25, 0x7F	; 127
 53c:	80 e8       	ldi	r24, 0x80	; 128
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	60 e0       	ldi	r22, 0x00	; 0
 542:	08 95       	ret

00000544 <__fp_nan>:
 544:	9f ef       	ldi	r25, 0xFF	; 255
 546:	80 ec       	ldi	r24, 0xC0	; 192
 548:	08 95       	ret

0000054a <__fp_pscA>:
 54a:	00 24       	eor	r0, r0
 54c:	0a 94       	dec	r0
 54e:	16 16       	cp	r1, r22
 550:	17 06       	cpc	r1, r23
 552:	18 06       	cpc	r1, r24
 554:	09 06       	cpc	r0, r25
 556:	08 95       	ret

00000558 <__fp_pscB>:
 558:	00 24       	eor	r0, r0
 55a:	0a 94       	dec	r0
 55c:	12 16       	cp	r1, r18
 55e:	13 06       	cpc	r1, r19
 560:	14 06       	cpc	r1, r20
 562:	05 06       	cpc	r0, r21
 564:	08 95       	ret

00000566 <__fp_round>:
 566:	09 2e       	mov	r0, r25
 568:	03 94       	inc	r0
 56a:	00 0c       	add	r0, r0
 56c:	11 f4       	brne	.+4      	; 0x572 <__fp_round+0xc>
 56e:	88 23       	and	r24, r24
 570:	52 f0       	brmi	.+20     	; 0x586 <__fp_round+0x20>
 572:	bb 0f       	add	r27, r27
 574:	40 f4       	brcc	.+16     	; 0x586 <__fp_round+0x20>
 576:	bf 2b       	or	r27, r31
 578:	11 f4       	brne	.+4      	; 0x57e <__fp_round+0x18>
 57a:	60 ff       	sbrs	r22, 0
 57c:	04 c0       	rjmp	.+8      	; 0x586 <__fp_round+0x20>
 57e:	6f 5f       	subi	r22, 0xFF	; 255
 580:	7f 4f       	sbci	r23, 0xFF	; 255
 582:	8f 4f       	sbci	r24, 0xFF	; 255
 584:	9f 4f       	sbci	r25, 0xFF	; 255
 586:	08 95       	ret

00000588 <__fp_split3>:
 588:	57 fd       	sbrc	r21, 7
 58a:	90 58       	subi	r25, 0x80	; 128
 58c:	44 0f       	add	r20, r20
 58e:	55 1f       	adc	r21, r21
 590:	59 f0       	breq	.+22     	; 0x5a8 <__fp_splitA+0x10>
 592:	5f 3f       	cpi	r21, 0xFF	; 255
 594:	71 f0       	breq	.+28     	; 0x5b2 <__fp_splitA+0x1a>
 596:	47 95       	ror	r20

00000598 <__fp_splitA>:
 598:	88 0f       	add	r24, r24
 59a:	97 fb       	bst	r25, 7
 59c:	99 1f       	adc	r25, r25
 59e:	61 f0       	breq	.+24     	; 0x5b8 <__fp_splitA+0x20>
 5a0:	9f 3f       	cpi	r25, 0xFF	; 255
 5a2:	79 f0       	breq	.+30     	; 0x5c2 <__fp_splitA+0x2a>
 5a4:	87 95       	ror	r24
 5a6:	08 95       	ret
 5a8:	12 16       	cp	r1, r18
 5aa:	13 06       	cpc	r1, r19
 5ac:	14 06       	cpc	r1, r20
 5ae:	55 1f       	adc	r21, r21
 5b0:	f2 cf       	rjmp	.-28     	; 0x596 <__fp_split3+0xe>
 5b2:	46 95       	lsr	r20
 5b4:	f1 df       	rcall	.-30     	; 0x598 <__fp_splitA>
 5b6:	08 c0       	rjmp	.+16     	; 0x5c8 <__fp_splitA+0x30>
 5b8:	16 16       	cp	r1, r22
 5ba:	17 06       	cpc	r1, r23
 5bc:	18 06       	cpc	r1, r24
 5be:	99 1f       	adc	r25, r25
 5c0:	f1 cf       	rjmp	.-30     	; 0x5a4 <__fp_splitA+0xc>
 5c2:	86 95       	lsr	r24
 5c4:	71 05       	cpc	r23, r1
 5c6:	61 05       	cpc	r22, r1
 5c8:	08 94       	sec
 5ca:	08 95       	ret

000005cc <__fp_zero>:
 5cc:	e8 94       	clt

000005ce <__fp_szero>:
 5ce:	bb 27       	eor	r27, r27
 5d0:	66 27       	eor	r22, r22
 5d2:	77 27       	eor	r23, r23
 5d4:	cb 01       	movw	r24, r22
 5d6:	97 f9       	bld	r25, 7
 5d8:	08 95       	ret

000005da <__gesf2>:
 5da:	8a df       	rcall	.-236    	; 0x4f0 <__fp_cmp>
 5dc:	08 f4       	brcc	.+2      	; 0x5e0 <__gesf2+0x6>
 5de:	8f ef       	ldi	r24, 0xFF	; 255
 5e0:	08 95       	ret

000005e2 <__mulsf3>:
 5e2:	0b d0       	rcall	.+22     	; 0x5fa <__mulsf3x>
 5e4:	c0 cf       	rjmp	.-128    	; 0x566 <__fp_round>
 5e6:	b1 df       	rcall	.-158    	; 0x54a <__fp_pscA>
 5e8:	28 f0       	brcs	.+10     	; 0x5f4 <__mulsf3+0x12>
 5ea:	b6 df       	rcall	.-148    	; 0x558 <__fp_pscB>
 5ec:	18 f0       	brcs	.+6      	; 0x5f4 <__mulsf3+0x12>
 5ee:	95 23       	and	r25, r21
 5f0:	09 f0       	breq	.+2      	; 0x5f4 <__mulsf3+0x12>
 5f2:	a2 cf       	rjmp	.-188    	; 0x538 <__fp_inf>
 5f4:	a7 cf       	rjmp	.-178    	; 0x544 <__fp_nan>
 5f6:	11 24       	eor	r1, r1
 5f8:	ea cf       	rjmp	.-44     	; 0x5ce <__fp_szero>

000005fa <__mulsf3x>:
 5fa:	c6 df       	rcall	.-116    	; 0x588 <__fp_split3>
 5fc:	a0 f3       	brcs	.-24     	; 0x5e6 <__mulsf3+0x4>

000005fe <__mulsf3_pse>:
 5fe:	95 9f       	mul	r25, r21
 600:	d1 f3       	breq	.-12     	; 0x5f6 <__mulsf3+0x14>
 602:	95 0f       	add	r25, r21
 604:	50 e0       	ldi	r21, 0x00	; 0
 606:	55 1f       	adc	r21, r21
 608:	62 9f       	mul	r22, r18
 60a:	f0 01       	movw	r30, r0
 60c:	72 9f       	mul	r23, r18
 60e:	bb 27       	eor	r27, r27
 610:	f0 0d       	add	r31, r0
 612:	b1 1d       	adc	r27, r1
 614:	63 9f       	mul	r22, r19
 616:	aa 27       	eor	r26, r26
 618:	f0 0d       	add	r31, r0
 61a:	b1 1d       	adc	r27, r1
 61c:	aa 1f       	adc	r26, r26
 61e:	64 9f       	mul	r22, r20
 620:	66 27       	eor	r22, r22
 622:	b0 0d       	add	r27, r0
 624:	a1 1d       	adc	r26, r1
 626:	66 1f       	adc	r22, r22
 628:	82 9f       	mul	r24, r18
 62a:	22 27       	eor	r18, r18
 62c:	b0 0d       	add	r27, r0
 62e:	a1 1d       	adc	r26, r1
 630:	62 1f       	adc	r22, r18
 632:	73 9f       	mul	r23, r19
 634:	b0 0d       	add	r27, r0
 636:	a1 1d       	adc	r26, r1
 638:	62 1f       	adc	r22, r18
 63a:	83 9f       	mul	r24, r19
 63c:	a0 0d       	add	r26, r0
 63e:	61 1d       	adc	r22, r1
 640:	22 1f       	adc	r18, r18
 642:	74 9f       	mul	r23, r20
 644:	33 27       	eor	r19, r19
 646:	a0 0d       	add	r26, r0
 648:	61 1d       	adc	r22, r1
 64a:	23 1f       	adc	r18, r19
 64c:	84 9f       	mul	r24, r20
 64e:	60 0d       	add	r22, r0
 650:	21 1d       	adc	r18, r1
 652:	82 2f       	mov	r24, r18
 654:	76 2f       	mov	r23, r22
 656:	6a 2f       	mov	r22, r26
 658:	11 24       	eor	r1, r1
 65a:	9f 57       	subi	r25, 0x7F	; 127
 65c:	50 40       	sbci	r21, 0x00	; 0
 65e:	8a f0       	brmi	.+34     	; 0x682 <__mulsf3_pse+0x84>
 660:	e1 f0       	breq	.+56     	; 0x69a <__mulsf3_pse+0x9c>
 662:	88 23       	and	r24, r24
 664:	4a f0       	brmi	.+18     	; 0x678 <__mulsf3_pse+0x7a>
 666:	ee 0f       	add	r30, r30
 668:	ff 1f       	adc	r31, r31
 66a:	bb 1f       	adc	r27, r27
 66c:	66 1f       	adc	r22, r22
 66e:	77 1f       	adc	r23, r23
 670:	88 1f       	adc	r24, r24
 672:	91 50       	subi	r25, 0x01	; 1
 674:	50 40       	sbci	r21, 0x00	; 0
 676:	a9 f7       	brne	.-22     	; 0x662 <__mulsf3_pse+0x64>
 678:	9e 3f       	cpi	r25, 0xFE	; 254
 67a:	51 05       	cpc	r21, r1
 67c:	70 f0       	brcs	.+28     	; 0x69a <__mulsf3_pse+0x9c>
 67e:	5c cf       	rjmp	.-328    	; 0x538 <__fp_inf>
 680:	a6 cf       	rjmp	.-180    	; 0x5ce <__fp_szero>
 682:	5f 3f       	cpi	r21, 0xFF	; 255
 684:	ec f3       	brlt	.-6      	; 0x680 <__mulsf3_pse+0x82>
 686:	98 3e       	cpi	r25, 0xE8	; 232
 688:	dc f3       	brlt	.-10     	; 0x680 <__mulsf3_pse+0x82>
 68a:	86 95       	lsr	r24
 68c:	77 95       	ror	r23
 68e:	67 95       	ror	r22
 690:	b7 95       	ror	r27
 692:	f7 95       	ror	r31
 694:	e7 95       	ror	r30
 696:	9f 5f       	subi	r25, 0xFF	; 255
 698:	c1 f7       	brne	.-16     	; 0x68a <__mulsf3_pse+0x8c>
 69a:	fe 2b       	or	r31, r30
 69c:	88 0f       	add	r24, r24
 69e:	91 1d       	adc	r25, r1
 6a0:	96 95       	lsr	r25
 6a2:	87 95       	ror	r24
 6a4:	97 f9       	bld	r25, 7
 6a6:	08 95       	ret

000006a8 <_exit>:
 6a8:	f8 94       	cli

000006aa <__stop_program>:
 6aa:	ff cf       	rjmp	.-2      	; 0x6aa <__stop_program>
